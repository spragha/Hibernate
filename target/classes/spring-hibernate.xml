<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd 
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
	">

	<context:annotation-config />
	<context:component-scan base-package="org.ragha.hibernate"></context:component-scan>
	<!-- <context:component-scan base-package="org.medstore.utils"></context:component-scan> -->

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:dao.properties</value>
			</list>
		</property>
	</bean>
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<bean id="CWSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="jtaTransactionManager" ref="transactionManager"/> -->
		<property name="annotatedClasses">
			<list>
				<value>org.ragha.hibernate.model.Employee</value>			
			</list>
		</property>
		<property name="mappingResources">
			<list>
				<value>employee.hbm.xml</value>
			</list>
		</property>
 
		<!-- <property name = "mappingResources"> <list> <value>Registration.hbm.xml</value> 
			</list> </property> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="CWSessionFactory"></property>
		<!-- <property name="org.hibernate.FlushMode" value="always" /> -->
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="CWSessionFactory" />
	</bean>
	
	<tx:annotation-driven />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" />
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- ensure that the above transactional advice runs for any execution of 
		a method in 'daos' package -->

	<aop:config>
        <aop:pointcut id="allDaoMethods" expression="execution(* org.ragha.hibernate.dao..*.*(..))" />
        <aop:pointcut id="allServiceMethods" expression="execution(* org.ragha.hibernate.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="allDaoMethods" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="allServiceMethods" />        
    </aop:config>
	
	<bean id="employeeDao" class="org.ragha.hibernate.dao.impl.EmployeeDaoImpl" />
	
	<bean id="employeeService" class="org.ragha.hibernate.service.impl.EmployeeServiceImpl">
		<property name="employeeDao" ref="employeeDao" />
	</bean>
	
</beans>